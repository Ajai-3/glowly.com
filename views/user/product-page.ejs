<!DOCTYPE html>
<html lang="en">
<%- include('partials/headforhome', { name: name, categories: categories }) %>

<div class="user-contents">
  <div class="container mt-2 p-0">
    <!-- Breadcrumb -->
    <div class="container mt-2">
      <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
          <li class="breadcrumb-item"><a href="/">Home</a></li>
          <li class="breadcrumb-item">
            <a href="/shop?filters=%7B%22category%22%3A%5B%22<%= product.categoryId._id %>%22%5D%7D">
              <%= product.categoryId.name %>
            </a>
          </li>
          <li class="breadcrumb-item">
            <a href="/shop?filters=%7B%22category%22%3A%5B%22<%= product.categoryId._id %>%22%5D%2C%22subcategory%22%3A%5B%22<%= product.subcategoryId._id %>%22%5D%7D"">
              <%= product.subcategoryId.name %>
            </a>
          </li>
          <li class="breadcrumb-item active" aria-current="page">
            <%= product.title.split(' ').slice(0, 4).join(' ') %>
          </li>
        </ol>
      </nav>
    </div>

    <!-- Product Container -->
    <div class="row justify-content-center g-0 p-3 product-container">
      <!-- Product Image Section -->
      <div class="col-md-5 d-flex">
        <div class="product-image d-flex">
          <div class="product-images d-flex flex-column me-2">
            <% variant.images.forEach((img, index) => { %>
            <div class="product-img m-1">
              <img src="<%= img %>" alt="Product Image <%= index + 1 %>" class="img-thumbnail side-image" data-src="<%= img %>">
            </div>
            <% }); %>
          </div>
          <div class="product-display-image p-3 pt-2">
            <div class="zoom-container">
              <img id="main-display-image" src="<%= variant.images[0] %>" alt="Main Product Image" class="img-fluid">
            </div>
          </div>
        </div>
      </div>

      <!-- Product Info Section -->
      <div class="col-md-5">
        <div class="product-info">
          <div class="product-page-product-title mb-2">
            <%= product.title %> - <%= variant.shade %>
          </div>

          <div class="product-page-product-rating d-flex">
            <% const rating = product.rating || 0; %>
            <% const fullStars = Math.floor(rating); %>
            <% const emptyStars = 5 - fullStars; %>
            <% const fullStarColor = 'color: gold;'; %>
            <% const emptyStarColor = 'color: gray;'; %>

            <span>
              <% for (let i = 0; i < fullStars; i++) { %>
              <i class="fas fa-star" style="<%= fullStarColor %>; margin-right: 2px;"></i>
              <% } %>
              <% for (let i = 0; i < emptyStars; i++) { %>
              <i class="fas fa-star" style="<%= emptyStarColor %>; margin-right: 2px;"></i>
              <% } %>
            </span>
            <span style="margin-left: 5px;"><%= rating %></span>


            &nbsp;/ 5 &nbsp; <p class="mb-1">| &nbsp;&nbsp;<%= product.reviewCount ? product.reviewCount + ' ratings' : '0 ratings' %> & <%= product.reviewCount ? product.reviewCount + ' reviews' : '0 reviews' %> </p>
          </div>

          <div class="d-flex product-shade mt-2">
            <p class="m-0">Shade:&nbsp;&nbsp; </p> <span><%= variant.shade %></span>
          </div>

          <div class="variant-colors d-flex mt-2">
            <% product.variants.forEach(function (variant) { %>
            <% if (variant.isDeleted === false) { %>
            <a href="/product/<%= product._id %>/<%= variant._id %>" class="variant-link">
              <div class="color-swatch <% if (variant._id.toString() === activeVariantId) { %>active<% } %>" title="<%= variant.shade %>" style="background-color: <%= variant.color %>;">
              </div>
            </a>
            <% } %>
            <% }); %>
          </div>


          <div class="d-flex align-items-center">
            <div class="quantity-selector-new m-1">
              QTY: <input type="number" id="quantity" value="1" min="1" />
            </div>
            <div class="product-stock ms-4 <%= variant.stockQuantity > 0 ? 'available' : 'unavailable' %>">
              Stocks: <%= variant.stockQuantity > 0 ? variant.stockQuantity : "Unavailable" %>
            </div>
          </div>

          <div class="product-page-product-price mt-1 mb-2">
            <span class="mrp">MRP: </span>
            <span class="original-price price-inr"> ₹<%= variant.regularPrice %></span>
            <span class="sales-price price-inr">₹<%= variant.salePrice %>&nbsp; |</span>
            <% if (variant.regularPrice > variant.salePrice) { %>
            <span class="discount-percentage">
              <%= Math.round(((variant.regularPrice - variant.salePrice) / variant.regularPrice) * 100) %>% Off
            </span>
            <% } %>
          </div>

          <div class="d-flex">
            <form action="/add-to-cart" method="POST" class="cart-form" id="cart-form" data-product-id="<%= product._id %>" data-variant-id="<%= variant._id %>">
              <button type="button" id="main-add-to-cart-btn" class="add-to-cart-btn add-to-bag-btn me-2">
                Add to Bag &nbsp;&nbsp;<i class="fa-solid fa-bag-shopping"></i>
              </button>
            </form>


            <form action="/buy-now" id="buy-now-form" data-product-id="<%= product._id %>" data-variant-id="<%= variant._id %>">
              <button id="buy-now-button" class="buy-now-btn">Buy Now</button>
            </form>
          </div>
        </div>
      </div>
    </div>

    <!-- Product Description and Reviews Section (Toggle) -->
    <div class="row mt-4 description-review-container">
      <div class="col-md-12">
        <ul class="nav nav-tabs" id="productTab" role="tablist">
          <li class="nav-item">
            <a class="nav-link active" id="description-tab" data-bs-toggle="tab" href="#description1" role="tab" aria-controls="description" aria-selected="true">
              Description
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" id="reviews-tab" data-bs-toggle="tab" href="#reviews" role="tab" aria-controls="reviews" aria-selected="false">
              Reviews
            </a>
          </li>
        </ul>
        <div class="tab-content" id="productTabContent">
          <!-- Description Section -->
          <div class="tab-pane fade show active" id="description1" role="tabpanel" aria-labelledby="description-tab">
            <div class="row">
              <!-- First Description -->
              <div class="col-md-6 content">
                <p><%= product.description %></p>
              </div>
              <!-- Second Description -->
              <div class="col-md-6 content">
                <p>Brand: &nbsp; <%= product.brandId.brandName %></p>
                <p>Category: &nbsp; <%= product.categoryId.name %></p>
                <p>Subcategory: &nbsp; <%= product.subcategoryId.name %></p>
              </div>
            </div>
          </div>

          <!-- Reviews Section -->
          <div class="tab-pane fade content" id="reviews" role="tabpanel" aria-labelledby="reviews-tab">
            <div class="reviews">
              <% if (reviews && reviews.length > 0) { %>
              <% reviews.forEach((review) => { %>
              <div class="review mb-3">
                <div class="review-profile-session d-flex align-items-center mb-1">
                  <div class="me-2">
                    <% if (review.userId.profilePic) { %>
                      <img src="<%= review.userId.profilePic %>" alt="Profile Picture" class="profile-pic">
                      <% } else { %>
                      <i class="fa-solid fa-circle-user"></i>
                      <% } %>
                  </div>
                  <div class="review-user-verify">
                    <p><%= review.userId.name %></p>
                    <div class="d-flex">
                      <p><% if (review.verified) { %>
                        Verified <i class="fa-solid fa-check"></i>
                        <% } else { %>
                        Not Verified
                        <% } %> &nbsp;&nbsp;
                        
                      </p>
                      <p><%= new Date(review.createdAt).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %></p>
                      <p2> &nbsp;( <%= review.variantShade %> )</p2>
                    </div>
                  </div>
                  

                </div>
                <div class="review-review">
                  <p><%= review.review %></p>
                  <p>Rating: <%= review.rating %> / 5</p>
                </div>


              </div>
              <% }); %>
              <% } else { %>
              <p>No reviews yet. Be the first to review!</p>
              <% } %>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Related Products Section -->
    <h5 class="mb-0 mt-4">Similar Items You Might Also Like</h5>
    <div class="product-grid mt-4">
      <% relatedVariants.forEach(relatedVariant => { %>
      <div class="product-card" data-variant-id="<%= relatedVariant._id %>">
        <a href="/product/<%= relatedVariant.productId %>/<%= relatedVariant._id %>">
          <img src="<%= relatedVariant.images[0] %>" alt="<%= relatedVariant.shade %>" />
        </a>
        <div class="product-card-like">
          <form action="/add-to-wishlist/<%= relatedVariant.productId %>" method="POST" class="wishlist-form" id="wishlist-form">
            <% if (user) { %>
            <% if (wishlist && wishlist.products && wishlist.products.some(item => item.product_id._id.toString() === relatedVariant.productId.toString() && item.variant_id.toString() === relatedVariant._id.toString())) { %>
            <button type="submit" title="Remove from Wishlist" class="wishlist-button">
              <i class="fa-solid fa-heart in-wishlist"></i>
            </button>
            <% } else { %>
            <button type="submit" title="Add to Wishlist" class="wishlist-button">
              <i class="fa-solid fa-heart not-in-wishlist"></i>
            </button>
            <% } %>
            <% } else { %>
            <button type="button" title="Login to Add to Wishlist" class="wishlist-button" onclick="window.location.href='/login'">
              <i class="fa-solid fa-heart"></i>
            </button>
            <% } %>
          </form>
        </div>
        <a href="/product/<%= relatedVariant.productId %>/<%= relatedVariant._id %>">
          <p class="product-title"><%= relatedVariant.productTitle %> - <%= relatedVariant.shade %></p>
        </a>
        <div class="product-prices-box">
          <p class="sale-price price-inr">&#8377;<%= relatedVariant.salePrice %></p>
          <p class="original-price price-inr mx-2">&#8377;<%= relatedVariant.regularPrice %></p>
          <% if (relatedVariant.regularPrice > relatedVariant.salePrice) { %>
          <span class="discount-percentage">
            <%= Math.round(((relatedVariant.regularPrice - relatedVariant.salePrice) / relatedVariant.regularPrice) * 100) %>% Off
          </span>
          <% } %>
        </div>
        <% const variantInCart = cartVariants.includes(relatedVariant._id.toString()); %>
        <% if (variantInCart) { %>
        <!-- Go to Cart Button -->
        <a href="/user/my-cart">
          <button type="button" class="go-to-cart-btn">Go To Bag</button>
        </a>
        <% } else { %>
        <!-- Second Add to Bag Button -->
        <form action="/add-to-cart" method="POST" class="cart-form" data-product-id="<%= relatedVariant.productId %>" data-variant-id="<%= relatedVariant._id %>">
          <button type="button" class="add-to-cart-btn">Add to Bag</button>
        </form>
        <% } %>
      </div>
      <% }) %>
    </div>
    <div class="d-flex justify-content-center mt-3">
      <a href="/shop?filters=%7B%22category%22%3A%5B%22<%= product.categoryId._id %>%22%5D%7D">
        <button class="main-btn px-4">Load More</button>
      </a>
    </div>


  </div>
</div>



<%- include('partials/footerforhome') %>

<script>
  const toastWish = (message) => {
    iziToast.show({
      message: message,
      backgroundColor: '#e80071',
      messageColor: '#FFFFFF',
      icon: 'fas fa-check-circle',
      iconColor: '#FFFFFF',
      timeout: 3000,
      position: 'bottomCenter',
    });
  };
  const toastSuccess = (message) => {
    iziToast.success({
      message: message,
      backgroundColor: '#0e932d',
      messageColor: '#FFFFFF',
      icon: 'fa fa-check',
      iconColor: '#FFFFFF',
      timeout: 1500,
      position: 'topRight',

    });
  };

  const toastError = (message) => {
    iziToast.error({
      message: message,
      backgroundColor: '#e51e1e',
      messageColor: '#FFFFFF',
      icon: 'fa fa-times',
      iconColor: '#FFFFFF',
      timeout: 1500,
      position: 'topRight',
    });
  };
  const toastInfo = (message) => {
    iziToast.info({
      message: message,
      backgroundColor: '#2160de',
      messageColor: '#FFFFFF',
      icon: 'fa fa-info-circle',
      iconColor: '#FFFFFF',
      timeout: 1500,
      position: 'topRight',
    });
  };

  const toastWarning = (message) => {
    iziToast.warning({
      message: message,
      backgroundColor: '#e5811e',
      messageColor: '#212529',
      icon: 'fa fa-exclamation-triangle',
      iconColor: '#212529',
      timeout: 1500,
      position: 'topRight',
    });
  };


  document.addEventListener('DOMContentLoaded', function() {
    const priceElements = document.querySelectorAll('.price-inr');

    priceElements.forEach(element => {
      const price = parseInt(element.textContent.replace(/[^0-9]/g, ''), 10);
      element.textContent = '₹ ' + price.toLocaleString('en-IN');
    });
  });

  // Select all side images and the main display image
  const sideImages = document.querySelectorAll('.side-image');
  const mainImage = document.getElementById('main-display-image');

  sideImages.forEach(image => {
    image.addEventListener('click', () => {
      mainImage.src = image.dataset.src;
    });
    image.addEventListener('mouseover', () => {
      mainImage.src = image.dataset.src;
    });
  });

  // Image Zoom
  const zoomContainer = document.querySelector('.zoom-container');
  zoomContainer.addEventListener('click', () => {
    zoomContainer.classList.toggle('zoomed');
  });

  // Quantity selecter
  document.addEventListener('DOMContentLoaded', function() {
    const quantityInput = document.getElementById('quantity');

    quantityInput.addEventListener('input', function() {
      let value = parseInt(quantityInput.value, 10);
      if (value < 1) {
        quantityInput.value = 1;
      } else if (value > 7) {
        quantityInput.value = 7;
      }
    });
  });

  // Wishlist    
  document.addEventListener('DOMContentLoaded', () => {
    const forms = document.querySelectorAll('.wishlist-form');

    forms.forEach(form => {
      form.addEventListener('submit', function(event) {
        event.preventDefault();

        const button = form.querySelector('button');
        const icon = button.querySelector('i');
        const productId = form.action.split('/').pop();
        const variantId = form.closest('.product-card').getAttribute('data-variant-id').trim();
        const url = form.action;

        fetch(url, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              product_id: productId,
              variant_id: variantId
            }),
          })
          .then(response => {
            if (!response.ok) {
              throw new Error(`Server Error: ${response.status} ${response.statusText}`);
            }
            return response.json();
          })
          .then(data => {
            if (data.action === 'added') {
              icon.classList.remove('not-in-wishlist');
              icon.classList.add('in-wishlist');
              button.title = 'Remove from Wishlist';

              toastWish('Product has been added to Wishlist.');
            } else if (data.action === 'removed') {
              icon.classList.remove('in-wishlist');
              icon.classList.add('not-in-wishlist');
              button.title = 'Add to Wishlist';

              toastWish('Product has been removed from Wishlist.');
            } else if (data.error) {
              console.error('Server Error:', data.error);
            }
          })
          .catch(error => {
            console.error('Error:', error);
            toastWarning('An error occurred.')
          });
      });
    });
  });


  // Add To Cart
  document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll(".add-to-cart-btn").forEach((button) => {
      button.addEventListener("click", (event) => {
        event.preventDefault();

        const form = event.target.closest("form");
        if (!form) {
          console.log("Form not found for the clicked button");
          return;
        }

        const productId = form.dataset.productId;
        const variantId = form.dataset.variantId;

        const isMainButton = event.target.id === "main-add-to-cart-btn";

        const quantity = isMainButton ?
          parseInt(document.getElementById("quantity").value || 1, 10) :
          1;

        handleCart({
          quantity,
          productId,
          variantId,
          form,
          isMainButton
        });
      });
    });
  });

  // Handle Cart Logic
  function handleCart({
    quantity,
    productId,
    variantId,
    form,
    isMainButton
  }) {
    const user = "<%= user %>";

    if (user) {
      fetch("/add-to-cart", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            quantity,
            productId,
            variantId
          }),
        })
        .then((response) => response.json())
        .then((data) => {
          if (data.success) {
            if (!isMainButton) {
              const newButton = document.createElement("a");
              newButton.href = "/user/my-cart";
              newButton.innerHTML = `<button type="button" class="go-to-cart-btn">Go To Bag</button>`;
              form.parentNode.replaceChild(newButton, form);
            }
            const cartCountElement = document.querySelector('.nav-cart-count');
            if (cartCountElement) {
              cartCountElement.innerText = data.cartCount;
              cartCountElement.style.display = data.cartCount > 0 ? "block" : "none";
            }
            toastSuccess(data.message);
          } else {
            toastError(data.message);
          }
        })
        .catch(() => {
          toastWarning("Error adding product to cart.");
        });
    } else {
      window.location = '/login'
    }
  }




  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('buy-now-form');
    const button = document.getElementById('buy-now-button');

    form.addEventListener('submit', function(event) {
      event.preventDefault();

      const quantity = document.getElementById('quantity').value || 1;
      const productId = form.dataset.productId;
      const variantId = form.dataset.variantId;

      fetch(form.action, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            quantity,
            productId,
            variantId
          }),
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            toastSuccess(data.message)
            const cartCountElement = document.querySelector('.nav-cart-count');
            if (cartCountElement) {
              cartCountElement.innerText = data.cartCount;
              cartCountElement.style.display = data.cartCount > 0 ? "block" : "none";
            }
            setTimeout(() => {
              const checkoutUrl = `/placeOrderWithBuyNow?productId=${encodeURIComponent(productId)}&variantId=${encodeURIComponent(variantId)}&quantity=${encodeURIComponent(quantity)}`;
              window.location.href = checkoutUrl;
            }, 1500)
          } else {
            toastError(data.message)
          }
        })
        .catch(error => {
          console.error('Error:', error);
          toastWarning("Internal error occurred")
        });
    });
  });
</script>

</html>