<!DOCTYPE html>
<html lang="en">
<%- include('partials/headforhome', { user, categories }) %>

<div class="user-contents">
  <div class="container my-4 p-2">
    <% if (cartProducts.length > 0) { %>
    <div class="row">
      <!-- Left Column: Cart Items -->
      <div class="col-12 col-lg-8">
        <% cartProducts.forEach(({ product, variant, quantity }) => { %>
        <!-- Cart Item -->
        <div class="card mb-1 px-2 shadow-sm cart-box" id="cart-box" data-product-id="<%= product._id %>" data-variant-id="<%= variant._id %>">
          <div class="row g-0">
            <!-- Image Column -->
            <div class="col-4 col-md-2 text-center mt-2">
              <a href="/product/<%= product._id %>/<%= variant._id %>">
                <img id="main-display-image" src="<%= variant.images[0] %>" class="img-fluid rounded" alt="<%= product.title %>">
              </a>

            </div>

            <!-- Content Column -->
            <div class="col-8 col-md-10">
              <div class="card-body px-3 py-2">
                <a href="/product/<%= product._id %>/<%= variant._id %>">
                  <h6 class="card-title"><%= product.title %> - <%= variant.shade %></h6>
                </a>

                <div class="cart-box-quantity-selector d-flex my-1">
                  <p class="qty m-0">QTY:
                    <select class="quantity-select">
                      <% for (let i = 1; i <= 6; i++) { %>
                      <option value="<%= i %>" <%= i === quantity ? 'selected' : '' %>><%= i %></option>
                      <% } %>
                    </select>
                  </p>
                  <p class="cart-stock">
                    <% 
                              let stockMessage;
                              if (variant.stockQuantity === 0) {
                                stockMessage = 'Unavailable';
                              } else if (quantity > variant.stockQuantity) {
                                stockMessage = 'Not enough stock. Only ' + variant.stockQuantity + ' Left';
                              } else if (variant.stockQuantity <= 10) {
                                stockMessage = 'Hurry! Only ' + variant.stockQuantity + ' Left';
                              } else {
                                stockMessage = 'Stocks ' + variant.stockQuantity + ' Left';
                              }
                            %>
                    <%= stockMessage %>
                  </p>
                </div>
                <a href="/product/<%= product._id %>/<%= variant._id %>" class="cart-product-details">details</a>
                <div class="d-flex justify-content-between cart-price">
                  <p class="card-text mb-1">Unit Price:
                    <span class="original-price price-inr">₹<%= variant.regularPrice %></span>
                    <span class="sales-price price-inr">₹<%= variant.salePrice %></span>
                    <span class="discount-percentage">|
                      <% if (variant.regularPrice > variant.salePrice) { %>
                      <span class="discount-percentage">
                        <%= Math.round(((variant.regularPrice - variant.salePrice) / variant.regularPrice) * 100) %>% Off
                      </span>
                      <% } %>
                    </span>
                  </p>
                  <p class="card-text">Total:
                    <span class="sales-price price-inr">Total: ₹<%= variant.salePrice * quantity %></span>
                  </p>
                </div>
                <div class="remove-cart-item">
                  <button class="remove-product" data-product-id="<%= product._id %>" data-variant-id="<%= variant._id %>">
                    <i class="fa-solid fa-trash-arrow-up"></i>
                  </button>
                </div>
              </div>
            </div>
          </div>


        </div>
        <% }); %>

      </div>


      <!-- Right Column: Price Summary -->
      <div class="col-12 col-lg-4">
        <div class="card shadow-sm price-summary">
          <div class="card-body">
            <h5 class="card-title">PRICE SUMMARY (<%= cartProducts.length %> ITEMS)</h5>
            <hr>
            <p class="d-flex justify-content-between">
              <span>Total MRP</span>
              <span class="price-inr">₹<%= cartProducts.reduce((total, { variant, quantity }) => total + (variant.regularPrice * quantity), 0) %></span>
            </p>
            <p class="d-flex justify-content-between">
              <span>Discount</span>
              <span class="discount-percentage price-inr">₹<%= cartProducts.reduce((total, { variant, quantity }) => total + ((variant.regularPrice - variant.salePrice) * quantity), 0) %></span>
            </p>
            <p class="d-flex justify-content-between">
              <span>Subtotal</span>
              <span class="price-inr">₹<%= cartProducts.reduce((total, { variant, quantity }) => total + (variant.salePrice * quantity), 0) %></span>
            </p>
            <hr>
            <p class="d-flex justify-content-between">
              <strong>Total</strong>
              <strong class="price-inr">₹<%= cartProducts.reduce((total, { variant, quantity }) => total + (variant.salePrice * quantity), 0) %></strong>
            </p>
            <a href="/user/checkout">
              <button class="main-btn w-100 mt-3">Proceed to Checkout <i class="fas fa-check-circle"></i></button>
            </a>
          </div>
        </div>
      </div>
    </div>
    <div>

    </div>
    <% } else { %>
    <!-- Empty Cart Section -->
    <div class="empty-cart-section d-flex flex-column justify-content-center align-items-center">
      <a href="/home">
        <img src="/assets/logo/cartEmpty.png" alt="Empty Cart Image" class="empty-cart-image" />
      </a>
      <div class="text-center">
        <h3>Your Shopping Bag is empty</h3>
        <p>This feels too light! Go on, add all your favorites</p>
        <a href="/home"><button class="main-btn">Start Shopping</button></a>
      </div>
    </div>
    <% } %>
  </div>
</div>

<div id="customPopup" class="popup hidden">
  <div class="popup-content">
    <h5 class="popup-title">Are you sure?</h5>
    <p class="popup-text">You won't be able to revert this!</p>
    <div class="popup-buttons">
      <button id="confirmButton" class="popup-button confirm">Yes, remove it!</button>
      <button id="cancelButton" class="popup-button cancel">No, keep it</button>
    </div>
  </div>
</div>
<div id="preloader" style="display: none;">
  <div class="loader"></div>
</div>



</body>
<%- include('partials/footerforhome') %>

<script>



  document.addEventListener("DOMContentLoaded", () => {
    const cartBoxes = document.querySelectorAll(".cart-box");
    cartBoxes.forEach(cartBox => {
      const cartStockElement = cartBox.querySelector(".cart-stock");
      if (cartStockElement) {
        const stockText = cartStockElement.innerText;
        if (stockText === "Unavailable" || stockText.includes("Not enough stock")) {
          cartBox.classList.add("faded");
        }
      }
    });
  });
  document.addEventListener("DOMContentLoaded", function() {
    const toastSuccess = (message) => {
      iziToast.success({
        message: message,
        backgroundColor: '#0e932d',
        messageColor: '#FFFFFF',
        icon: 'fa fa-check',
        iconColor: '#FFFFFF',
        timeout: 1500,
        position: 'topRight',

      });
    };

    const toastError = (message) => {
      iziToast.error({
        message: message,
        backgroundColor: '#e51e1e',
        messageColor: '#FFFFFF',
        icon: 'fa fa-times',
        iconColor: '#FFFFFF',
        timeout: 1500,
        position: 'topRight',
      });
    };
    const toastInfo = (message) => {
      iziToast.info({
        message: message,
        backgroundColor: '#2160de',
        messageColor: '#FFFFFF',
        icon: 'fa fa-info-circle',
        iconColor: '#FFFFFF',
        timeout: 1500,
        position: 'topRight',
      });
    };

    const toastWarning = (message) => {
      iziToast.warning({
        message: message,
        backgroundColor: '#e5811e',
        messageColor: '#212529',
        icon: 'fa fa-exclamation-triangle',
        iconColor: '#212529',
        timeout: 1500,
        position: 'topRight',
      });
    };

    const urlParams = new URLSearchParams(window.location.search);
    const message = urlParams.get("message");
    const success = urlParams.get("success");

    if (message) {
      success === "false" ? toastError(decodeURIComponent(message)) : toastSuccess(decodeURIComponent(message));
      window.history.replaceState(null, "", window.location.pathname);
    }


    document.querySelectorAll('.quantity-select').forEach(select => {
      select.addEventListener('change', function() {
        const productElement = this.closest('.cart-box');
        const productId = productElement.getAttribute('data-product-id');
        const variantId = productElement.getAttribute('data-variant-id');
        const newQuantity = Number(this.value);

        fetch("/update-cart-product", {
            method: 'PATCH',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              newQuantity,
              productId,
              variantId
            }),
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              toastSuccess(data.message)
              setTimeout(() => {
                location.reload();
              }, 1500);

            } else {
              toastError(data.message)
              setTimeout(() => {
                location.reload();
              }, 1500);
            }
          })
          .catch(error => {
            console.error('Error updating quantity:', error);
            toastWarning('Something went wrong.')
          });
      });
    });

    document.addEventListener("DOMContentLoaded", () => {
      const cartBoxes = document.querySelectorAll(".cart-box");
      cartBoxes.forEach(cartBox => {
        const cartStockElement = cartBox.querySelector(".cart-stock");
        if (cartStockElement) {
          const stockText = cartStockElement.innerText;
          if (stockText === "Unavailable" || stockText.includes("Not enough stock")) {
            cartBox.classList.add("faded");
          }
        }
      });
    });

    document.addEventListener('DOMContentLoaded', function() {
      const quantityInputs = document.querySelectorAll('.quantity-input');
      quantityInputs.forEach((input) => {
        input.addEventListener('input', function() {
          input.value = Math.max(1, Math.min(7, input.value));
        });
      });
    });

    const popup = document.getElementById('customPopup');
    const confirmButton = document.getElementById('confirmButton');
    const cancelButton = document.getElementById('cancelButton');

    let currentProductId = null;
    let currentVariantId = null;

    function showPopup(prodId, varId) {
      currentProductId = prodId;
      currentVariantId = varId;
      popup.classList.remove('hidden');
      popup.style.animation = 'fadeInScale 0.3s forwards';
    }

    function hidePopup() {
      popup.style.animation = 'fadeOutScale 0.3s forwards';
      setTimeout(() => {
        popup.classList.add('hidden');
      }, 300);
    }

    confirmButton.addEventListener('click', () => {
      if (currentProductId && currentVariantId) {
        fetch("/remove-cart-product", {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              productId: currentProductId,
              variantId: currentVariantId
            }),
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              hidePopup();
              setTimeout(() => {
                location.reload();
              }, 1500);
              toastSuccess(data.message)
            } else {
              toastError(data.message)
              throw new Error(data.message);
            }
          })
          .catch(error => {
            toastWarning(error.message || 'An error occurred. Please try again.')
          });
      }
    });

    cancelButton.addEventListener('click', hidePopup);

    document.querySelectorAll('.remove-product').forEach(button => {
      button.addEventListener('click', function() {
        const prodId = this.getAttribute('data-product-id');
        const varId = this.getAttribute('data-variant-id');
        showPopup(prodId, varId);
      });
    });
  });
</script>

</html>