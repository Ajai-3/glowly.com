<!DOCTYPE html>
<html lang="en">
    <%- include('partials/headforhome', { user, categories }) %>

    <div class="user-contents">
      <div class="container my-4">
        <% if (cartProducts.length > 0) { %>
        <div class="row">
          <!-- Left Column: Cart Items -->
          <div class="col-md-8">
            <% cartProducts.forEach(({ product_details, quantity }) => { %>
              <!-- Cart Item -->
              <div class="card mb-1 px-2 shadow-sm cart-box" id="cart-box" data-product-id="<%= product_details._id %>">
                <div class="row g-0">
                  <div class="col-md-2 text-center mt-2">
                    <img id="main-display-image" src="/uploads/<%= encodeURIComponent(product_details.product_imgs[0]) %>" 
                    class="img-fluid rounded" alt="<%= product_details.title %>">
                  </div>
                  <div class="col-md-10">
                    <div class="card-body px-3 py-2">
                      <h6 class="card-title"><%= product_details.title %></h6>
                      <div class="cart-box-quantity-selector d-flex my-1">
                        <!-- <p class="qty m-0">QTY : <input type="number" class="quantity-input" value="<%= quantity %>" min="1" /></p> -->
                        <p class="qty m-0">QTY:
                          <select class="quantity-select">
                            <% for (let i = 1; i <= 6; i++) { %>
                              <option value="<%= i %>" <%= i === quantity ? 'selected' : '' %>><%= i %></option>
                            <% } %>
                          </select>
                        </p>
                        <p class="cart-stock">
                          <% 
                            if (product_details.available_quantity === 0) {
                              out = 'Unavailable';
                            } else if (quantity > product_details.available_quantity) {
                              out = 'Not enough stock. Only ' + product_details.available_quantity + ' Left';
                            } else {
                              out = 'Hurry! Only ' + product_details.available_quantity + ' Left';
                            }
                          %>
                          <%= out %>
                        </p>                     
                      </div>
                      <a href="/product/<%= product_details._id %>">details</a>
                      <div class="d-flex justify-content-between cart-price">
                        <p class="card-text">Unit Price: <span class="original-price price-inr">₹<%= product_details.price %></span> 
                        <span class="sales-price price-inr">₹<%= product_details.sales_price %></span> 
                        <span class="discount-percentage">| 
                          <% if (product_details.price > product_details.sales_price) { %>
                            <span class="discount-percentage">
                                <%= Math.round(((product_details.price - product_details.sales_price) / product_details.price) * 100) %>% Off 
                            </span>
                          <% } %>
                          </span></p>
                        <p class="card-text">Total: <span class="sales-price price-inr">Total: ₹<%= product_details.sales_price * quantity %></span></p>
                      </div>
                      <div class="remove-cart-item">
                        <button class="remove-product" data-product-id="<%= product_details._id %>">
                          <i class="fa-solid fa-trash-arrow-up"></i>
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            <% }); %>
          </div>
    
          <!-- Right Column: Price Summary -->
          <div class="col-md-4">
            <div class="card shadow-sm price-summary">
              <div class="card-body">
                <h5 class="card-title">PRICE SUMMARY (<%= cartProducts.length %> ITEMS)</h5>
                <hr>
                <p class="d-flex justify-content-between">
                  <span>Total MRP</span>
                  <span class="price-inr">₹<%= cartProducts.reduce((total, { product_details, quantity }) => total + (product_details.price * quantity), 0) %></span>
                </p>
                <p class="d-flex justify-content-between">
                  <span>Discount</span>
                  <span class="discount-percentage price-inr">₹<%= cartProducts.reduce((total, { product_details, quantity }) => total + ((product_details.price - product_details.sales_price) * quantity), 0) %></span>
                </p>
                <p class="d-flex justify-content-between">
                  <span>Subtotal</span>
                  <span class="price-inr">₹<%= cartProducts.reduce((total, { product_details, quantity }) => total + (product_details.sales_price * quantity), 0) %></span>
                </p>
                <hr>
                <p class="d-flex justify-content-between">
                  <strong>Total</strong>
                  <strong class="price-inr">₹<%= cartProducts.reduce((total, { product_details, quantity }) => total + (product_details.sales_price * quantity), 0) %></strong>
                </p>
                <a href="/checkout">
                  <button class="buy-now-btn w-100 mt-3">Proceed to Checkout <i class="fas fa-check-circle"></i></button>
                </a>
              </div>
            </div>
          </div>
        </div>
        <% } else { %>
          <!-- Empty Cart Section -->
          <div class="empty-cart-section d-flex flex-column justify-content-center align-items-center">
            <a href="/home">
              <img src="/assets/logo/cart-empty-img.png" alt="Empty Cart Image" class="empty-cart-image" />
            </a>
            <h3>Your Shopping Bag is empty</h3>
            <p>This feels too light! Go on, add all your favourites</p>
            <a href="/home" class="large-button-main">Start Shopping</a>
        </div>       
       <% } %>
      </div>
    </div>
    
    <div id="customPopup" class="popup hidden">
      <div class="popup-content">
        <h5 class="popup-title">Are you sure?</h5>
        <p class="popup-text">You won't be able to revert this!</p>
        <div class="popup-buttons">
          <button id="confirmButton" class="popup-button confirm">Yes, remove it!</button>
          <button id="cancelButton" class="popup-button cancel">No, keep it</button>
        </div>
      </div>
    </div>



</body>
<%- include('partials/footerforhome') %> 

<script>
document.addEventListener("DOMContentLoaded", function () {
      const notyf = new Notyf({
        duration: 1500,  
        ripple: true,  
        position: { x: 'right', y: 'bottom' },
        dismissible: true,  
        types: [
            { type: 'success', background: 'green' },  
            { type: 'error', background: 'red' },     
        ],
    });

    document.querySelectorAll('.quantity-select').forEach(select => {
        select.addEventListener('change', function () {
            const productElement = this.closest('.cart-box');
            const productId = productElement.getAttribute('data-product-id');
            const newQuantity = Number(this.value);

            fetch(`/update-cart-product/${productId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    productId: productId,  
                    quantity: newQuantity,  
                }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {  
                    notyf.success(data.message);
                    setTimeout(() => {
                      location.reload(); 
                    }, 1000);
                    
                } else {
                    notyf.error(data.message || 'Error updating quantity.');  
                    // setTimeout(() => {
                    //     location.reload();
                    // }, 1000);
                }
            })
            .catch(error => {
                console.error('Error updating quantity:', error);
                notyf.error('Something went wrong, please try again later.'); 
            });
        });
    });

    document.addEventListener("DOMContentLoaded", () => {
        const cartBoxes = document.querySelectorAll(".cart-box");
        cartBoxes.forEach(cartBox => {
            const cartStockElement = cartBox.querySelector(".cart-stock");
            if (cartStockElement) {
                const stockText = cartStockElement.innerText;
                if (stockText === "Unavailable" || stockText.includes("Not enough stock")) {
                    cartBox.classList.add("faded");
                }
            }
        });
    });

    document.addEventListener('DOMContentLoaded', function () {
        const quantityInputs = document.querySelectorAll('.quantity-input');
        quantityInputs.forEach((input) => {
            input.addEventListener('input', function () {
                input.value = Math.max(1, Math.min(7, input.value)); 
            });
        });
    });

    const popup = document.getElementById('customPopup');
    const confirmButton = document.getElementById('confirmButton');
    const cancelButton = document.getElementById('cancelButton');

    let currentProductId = null;

    function showPopup(productId) {
        currentProductId = productId; 
        popup.classList.remove('hidden');
        popup.style.animation = 'fadeInScale 0.3s forwards';
    }

    function hidePopup() {
        popup.style.animation = 'fadeOutScale 0.3s forwards';
        setTimeout(() => {
            popup.classList.add('hidden');
        }, 300);
    }

    confirmButton.addEventListener('click', () => {
        if (currentProductId) {
            fetch(`/remove-cart-product/${currentProductId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    hidePopup();
                    setTimeout(() => {
                        location.reload();
                    }, 1000);
                    notyf.success(data.message);  
                } else {
                    throw new Error(data.message);
                }
            })
            .catch(error => {
                notyf.error(error.message || 'An error occurred. Please try again.');  
            });
        }
    });

    cancelButton.addEventListener('click', hidePopup);

    document.querySelectorAll('.remove-product').forEach(button => {
        button.addEventListener('click', function () {
            const productId = this.getAttribute('data-product-id');
            showPopup(productId); 
        });
    });
});


</script>
</html>