<!DOCTYPE html>
<html lang="en">
<%- include('partials/headforhome', { user, categories }) %>

<div class="user-contents">
  <div class="container my-2">
    <div id="breadcrumbs" class="brudcrumbs-user-menu"><a href="/home">Home</a> > <a href="/my-account">My Account</a> > <a href="/my-orders">My Orders</a></div>
    <div class="row">
      <!-- Left Side Box -->
      <div class="col-md-3">
        <div class="card shadow-sm user-menu">
          <hr>
          <a href="/my-account"><i class="fas fa-user"></i> &nbsp; My Account</a>
          <hr>
          <a href="/manage-address"><i class="fa-solid fa-shop"></i> &nbsp; Manage Address</a>
          <hr>
          <a href="/my-coupns"><i class="fa-solid fa-gift"></i> &nbsp; My Coupns</a>
          <hr>
          <a href="/my-wishlist"><i class="fa-solid fa-heart"></i> &nbsp; My Wishlist</a>
          <hr>
          <a href="/my-wallet"><i class="fa-solid fa-wallet"></i> &nbsp; My Wallet</a>
          <hr>
          <a href="/my-orders" class="active"><i class="fa-solid fa-truck"></i> &nbsp; My Orders</a>
          <hr>
          <a href="/logout"><i class="fa-solid fa-power-off"></i> &nbsp; Logout</a>
          <hr>
        </div>
      </div>

      <!-- Right Side Box -->
      <div class="col-md-9">
        <div class="card shadow-sm p-4 user-menu-wishlist">
          <% if (orders.length > 0) { %>
            <h5 class="card-title">My Orders</h5>
            <% orders.forEach(order => { %>
              <% order.products.forEach(product => { %>
                <!-- Product Item -->
                <div class="card shadow-sm mb-2 order-box" id="order-box" data-order-id="<%= order._id %>" data-product-id="<%= product.product_id._id %>" data-address-id="<%= order.address_id %>">
                  <div class="row g-0 align-items-center">
                    
                    <!-- Product Image -->
                    <div class="col-md-2 text-center p-2">
                      <!-- data-order-id="<%= order._id %>" data-product-id="<%= product.product_id._id %>" data-variant-id="<%= product.variant_id %>" data-address-id="<%= order.address_id %>"> -->
                      <% let variant = product.product_id.variants.find(v => v._id.toString() === product.variant_id.toString()); %>
                      <% let imageUrl = variant?.images?.[0]; %>
                      <% if (imageUrl) { %>
                        <img src="<%= imageUrl %>" style="max-width: 90px;">
                      <% } else { %>
                        <p>No image</p>
                      <% } %>
                    </div>
                    
                    <!-- Product Details -->
                    <div class="col-md-8 p-1">
                      <div class="product-details">
                        <h6 class="mb-0 product-title" data-order-id="<%= order._id %>" data-product-id="<%= product.product_id._id %>" data-variant-id="<%= product.variant_id %>" data-address-id="<%= order.address_id %>"><%= product.product_id.title %></h6>
                        <h6 class="product-title mb-1" data-order-id="<%= order._id %>" data-product-id="<%= product.product_id._id %>" data-variant-id="<%= product.variant_id %>" data-address-id="<%= order.address_id %>">shade: <%= variant.shade %></h6>
                        <div class="d-flex justify-content-between mt-2">
                          <p class="m-0">Quantity: <%= product.quantity %></p>
                          <p class="m-0 price-inr">Unit Price: ₹<%= variant.salePrice %></p>
                          <p class="m-0 price-inr">Total: ₹<%= variant.salePrice * product.quantity %></p>
                        </div>
                      </div>
                    </div>
                    
                    <!-- Order Status -->
                    <div class="col-md-2 d-flex flex-column justify-content-between align-items-center">
                      <!-- Status Display -->
                      <p2 class="m-0 mb-4 
                        <% if (product.status === 'pending') { %> yellow-p <% } %>
                        <% if (product.status === 'processing') { %> blue-p <% } %>
                        <% if (product.status === 'shipped') { %> pink-p <% } %>
                        <% if (product.status === 'delivered') { %> green-p <% } %>
                        <% if (product.status === 'canceled') { %> red-p <% } %>
                        <% if (product.status === 'return_req') { %> yellow-p <% } %>
                        <% if (product.status === 'returned') { %> blue-p <% } %>">
                        <%= product.status %>
                      </p2>
            
                      <!-- Buttons -->
                      <% if (product.status === 'delivered') { %>
                        <!-- Return Button -->
                        <button type="button" class="return-btn" data-order-id="<%= order._id %>" data-product-id="<%= product.product_id._id %>"  data-variant-id="<%= product.variant_id %>"  data-quantity="<%= product.quantity %>">Return</button>
                      <% } else if (product.status === 'processing' || product.status === 'pending') { %>
                        <!-- Cancel Button -->
                        <button type="button" class="cancel-btn" data-order-id="<%= order._id %>" data-product-id="<%= product.product_id._id %>"  data-variant-id="<%= product.variant_id %>"  data-quantity="<%= product.quantity %>">Cancel</button>
                      <% } %>
                    </div>
                  </div>
                </div>
              <% }) %>
            <% }) %>
          <% } else { %>
            <div class="empty-cart-section d-flex flex-column justify-content-center align-items-center">
              <a href="/home">
                <img src="/assets/logo/no-orders.png" alt="Empty Cart Image" class="empty-cart-image" />
              </a>
              <h3>You have no orders</h3>
              <p>Explore our collection and place your first order today!</p>
              <a href="/home" class="large-button-main">Start Shopping</a>
            </div>  
          <% } %>
             

        </div>
      </div>
    </div>
  </div>
</div>


<div id="customPopup" class="popup hidden">
  <div class="popup-content">
    <h5 id="popupTitle" class="popup-title">Are you sure?</h5>
    <p id="popupText" class="popup-text">Once canceled, it can't be undone!</p>
    <div class="popup-buttons">
      <button id="confirmButton" class="popup-button confirm">Yes, cancel it!</button>
      <button id="cancelButton" class="popup-button cancel">No, keep it</button>
    </div>
  </div>
</div>

<%- include('partials/footerforhome') %>

<script>
document.addEventListener("DOMContentLoaded", function () {
  const toastSuccess = (message) => {
      iziToast.success({
        message: message,
        backgroundColor: '#0e932d',
        messageColor: '#FFFFFF',
        icon: 'fa fa-check',
        iconColor: '#FFFFFF',
        timeout: 1500,
        position: 'topRight',

      });
    };

    const toastError = (message) => {
      iziToast.error({
        message: message,
        backgroundColor: '#e51e1e',
        messageColor: '#FFFFFF',
        icon: 'fa fa-times',
        iconColor: '#FFFFFF',
        timeout: 1500,
        position: 'topRight',
      });
    };
    const toastInfo = (message) => {
      iziToast.info({
        message: message,
        backgroundColor: '#2160de',
        messageColor: '#FFFFFF',
        icon: 'fa fa-info-circle',
        iconColor: '#FFFFFF',
        timeout: 1500,
        position: 'topRight',
      });
    };

    const toastWarning = (message) => {
      iziToast.warning({
        message: message,
        backgroundColor: '#e5811e',
        messageColor: '#212529',
        icon: 'fa fa-exclamation-triangle',
        iconColor: '#212529',
        timeout: 1500,
        size: 'small',
        position: 'topRight',
      });
    };

    const popup = document.getElementById('customPopup');
    const popupTitle = document.getElementById('popupTitle');
    const popupText = document.getElementById('popupText');
    const confirmButton = document.getElementById('confirmButton');
    const cancelButton = document.getElementById('cancelButton');
    let productId = null;
    let orderId = null;
    let quantity = null;
    let actionType = null;
    let buttonElement = null;

    const showPopup = (event, type) => {
        const button = event.target;
        orderId = button.getAttribute('data-order-id');
        productId = button.getAttribute('data-product-id');
        variantId = button.getAttribute('data-variant-id');
        quantity = button.getAttribute('data-quantity');
        actionType = type;
        buttonElement = button;

        popupTitle.textContent = "Are you sure?";
        popupText.textContent = actionType === 'cancel'
        ? 'Do you want to cancel this item?'
        : 'Do you want to return this item?';

        confirmButton.textContent = actionType === 'cancel'
        ? 'Yes, cancel it!'
        : 'Yes, return it!';

        popup.classList.remove("hidden");
        popup.style.display = 'block';
    };

    const hidePopup = () => {
        popup.classList.add("hidden");
        popup.style.display = 'none';
    };

    confirmButton.addEventListener('click', () => {
        if (productId) {
            const endpoint = actionType === 'cancel' ? '/cancel-order' : '/return-order';
            fetch(endpoint, {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ orderId, productId, variantId, quantity }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    const statusText = actionType === 'cancel' ? 'canceled' : 'return_req';
                    const statusClass = actionType === 'cancel' ? 'red-p' : 'yellow-p';
                    const statusElement = buttonElement.closest('.col-md-2').querySelector('p2');
                    statusElement.textContent = statusText;
                    statusElement.className = `${statusClass} m-0 mb-4`;
                    buttonElement.remove();
                    toastSuccess(`Order successfully ${actionType}ed`)
                } else {
                  toastError(data.message || `Failed to ${actionType} the order.`)
                }
            })
            .catch(error => {
                toastWarning(`An error occurred while ${actionType}ing the order.`)
            });
        }
        hidePopup();
    });

    cancelButton.addEventListener('click', hidePopup);

    document.querySelectorAll('.cancel-btn').forEach(button => {
        button.addEventListener('click', (event) => showPopup(event, 'cancel'));
    });

    document.querySelectorAll('.return-btn').forEach(button => {
        button.addEventListener('click', (event) => showPopup(event, 'return'));
    });

    // Add click event listener to product images and titles to navigate to product details page
    document.querySelectorAll('.product-image, .product-title').forEach(element => {
    element.addEventListener('click', (event) => {
      const orderId = element.getAttribute('data-order-id');
      const productId = element.getAttribute('data-product-id');
      const variantId = element.getAttribute('data-variant-id');
      const addressId = element.getAttribute('data-address-id');
      window.location.href = `/product-details/${orderId}/${productId}/${variantId}/${addressId}`;
      event.stopPropagation(); 
    });
  });
});
</script>
</html>