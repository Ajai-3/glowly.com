<!DOCTYPE html>
<html lang="en">
<%- include('partials/headforhome', { user, categories }) %>


<div class="user-contents">
  <div class="container my-2">
    <div class="brudcrumbs-user-menu"><a href="/home">Home</a> > <a href="/my-account">My Account</a> > <a href="/my-orders">My Orders</a> > <a href="#">Order Id <%= orderId %></a></div>
    <div class="row">
      <!-- Left Side Box -->
      <div class="col-md-3">
        <div class="card shadow-sm user-menu">
          <hr>
          <a href="/my-account"><i class="fas fa-user"></i> &nbsp; My Account</a>
          <hr>
          <a href="/manage-address"><i class="fa-solid fa-shop"></i> &nbsp; Manage Address</a>
          <hr>
          <a href="/my-coupns"><i class="fa-solid fa-gift"></i> &nbsp; My Coupns</a>
          <hr>
          <a href="/my-wishlist"><i class="fa-solid fa-heart"></i> &nbsp; My Wishlist</a>
          <hr>
          <a href="/my-wallet"><i class="fa-solid fa-wallet"></i> &nbsp; My Wallet</a>
          <hr>
          <a href="/my-orders" class="active"><i class="fa-solid fa-truck"></i> &nbsp; My Orders</a>
          <hr>
          <a href="/logout"><i class="fa-solid fa-power-off"></i> &nbsp; Logout</a>
          <hr>
        </div>
      </div>

      <!-- Right Side Box -->
      <div class="col-md-9">
        <div class="card shadow-sm p-4 user-menu-wishlist">
          <div class="my-order-datailpage">
            <!-- Timeline Chart -->
            <div class="timeline">
              <div class="timeline-items">
                <% 
                        const statuses = [
                          { key: 'order_placed_at', label: 'Order Placed' },
                          { key: 'processing_at', label: 'Processing' },
                          { key: 'shipped_at', label: 'Shipped' },
                          { key: 'delivered_at', label: 'Delivered' }
                        ];

                        // Find latest status
                        let latestStatus = '';
                        let latestDate = null;
                        
                        for (const status of statuses) {
                          if (product[status.key] && (!latestDate || new Date(product[status.key]) > latestDate)) {
                            latestStatus = status.key;
                            latestDate = new Date(product[status.key]);
                          }
                        }

                        // Special statuses override
                        if (product.canceled_at) {
                          latestStatus = 'canceled_at';
                          latestDate = new Date(product.canceled_at);
                        } else if (product.returned_at) {
                          latestStatus = 'returned_at';
                          latestDate = new Date(product.returned_at);
                        } else if (product.return_reqested_at) {
                          latestStatus = 'return_reqested_at';
                          latestDate = new Date(product.return_reqested_at);
                        }

                        let progress = 0;
                        statuses.forEach((status, index) => {
                          let itemClass = '';
                          let dotClass = '';

                          // If we have a later status, mark this as completed
                          const statusDate = product[status.key] ? new Date(product[status.key]) : null;
                          const isCompleted = statusDate || (latestDate && statuses.findIndex(s => s.key === latestStatus) > index);

                          if (isCompleted) {
                            if (status.key === latestStatus) {
                              itemClass = 'current';
                              dotClass = 'current';
                              progress = ((index + 1) / statuses.length) * 100;
                            } else {
                              itemClass = 'completed';
                              dotClass = 'completed';
                            }
                          }

                          if (latestStatus === 'canceled_at') {
                            itemClass += ' canceled';
                            progress = 100;
                          } else if (latestStatus === 'returned_at' || latestStatus === 'return_reqested_at') {
                            itemClass += ' returned';
                            progress = 100;
                          }
                      %>
                <div class="timeline-item <%= itemClass %>">
                  <div class="timeline-dot <%= dotClass %>"></div>
                  <div class="timeline-content">
                    <div class="timeline-status"><%= status.label %></div>
                    <% if (statusDate) { %>
                    <div class="timeline-date">
                      <%= statusDate.toLocaleString() %>
                    </div>
                    <% } %>
                  </div>
                </div>
                <% }); %>

                <% if (latestStatus === 'canceled_at' || latestStatus === 'returned_at' || latestStatus === 'return_reqested_at') { %>
                <div class="timeline-item <%= latestStatus === 'canceled_at' ? 'canceled' : 'returned' %> current">
                  <div class="timeline-dot current"></div>
                  <div class="timeline-content">
                    <div class="timeline-status">
                      <%= latestStatus === 'canceled_at' ? 'Canceled' : 
                                  latestStatus === 'returned_at' ? 'Returned' : 'Return Requested' %>
                    </div>
                    <div class="timeline-date">
                      <%= latestDate.toLocaleString() %>
                    </div>
                  </div>
                </div>
                <% } %>
              </div>
              <div class="timeline-progress" style="transform: translateY(-50%) scaleX(<%= progress/100 %>)"></div>
            </div>

            <!-- Product Details -->
            <div>
              <div class="card my-order-datailpage-product px-2 pt-2 shadow-sm" data-product-id="<%= product._id %>" data-variant-id="<%= variant._id %>">
                <div class="row p-2">
                  <!-- Product Image -->
                  <div class="col-md-2 text-center">
                    <img src="<%= variant.images && variant.images[0] ? variant.images[0] : 'https://res.cloudinary.com/your-cloud-name/image/upload/v1736860957/default-image.jpg' %>" class="img-fluid rounded" alt="<%= product.title || 'Product Image' %>" style="max-width: 100px; object-fit: cover;">
                  </div>

                  <!-- Product Info -->
                  <div class="col-md-10 p-0">
                    <div class="card-body p-0">
                      <h6 class="card-title"><%= product.product_id.title %></h6>
                      <div class="product-shade my-1">
                        <p class="m-0">Shade: <span><%= variant.shade %></span></p>
                      </div>
                      <a href="/product/<%= product.product_id._id %>/<%= variant._id %>">View Product</a>
                    </div>
                  </div>

                  <!-- Pricing Details -->
                  <div class="col-12 mt-2">
                    <div class="row">
                      <div class="col-6 text-start px-4">
                        <p class="product-quantity qty m-0">Quantity:</p>
                      </div>
                      <div class="col-6 text-end px-4">
                        <p class="product-quantity qty m-0"><%= product.quantity %></p>
                      </div>
                    </div>

                    <div class="row">
                      <div class="col-6 text-start px-4">
                        <p class="card-text m-0">Unit Price:</p>
                      </div>
                      <div class="col-6 text-end px-4">
                        <p class="mb-1">
                          <span class="original-price price-inr"> <%= variant.regularPrice %></span>
                          <span class="card-text m-0 price-inr">₹ <%= product.total_amount / product.quantity %></span>
                        </p>

                      </div>
                    </div>

                    <div class="row">
                      <div class="col-6 text-start px-4">
                        <p class="card-text m-0">Total:</p>
                      </div>
                      <div class="col-6 text-end px-4">
                        <p class="card-text m-0 price-inr">₹ <%= product.amount_after_coupon %></p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <!-- Review Section -->
            <% if (review) { %>
            <div class="review-section">
              <div class="review-header">
                <h5>Your Review</h5>
              </div>

              <form method="POST" class="review-form-edit" data-product-id="<%= product.product_id._id %>" data-variant-id="<%= variant._id %>" data-order-id="<%= orderId %>" data-review-id="<%= review._id %>">
                <div class="mb-3">
                  <label>Rating</label>
                  <div class="star-rating">
                    <% for (let i = 5; i >= 1; i--) { %>
                    <input type="radio" id="star<%= i %>" name="rating" value="<%= i %>" <%= review.rating === i ? 'checked' : '' %> />
                    <label for="star<%= i %>">★</label>
                    <% } %>
                  </div>
                </div>

                <div class="mb-3">
                  <label>Review:</label>
                  <textarea class="review-input" name="review" placeholder="Edit your review..."><%= review.review %></textarea>
                </div>

                <button type="submit" class="submit-review">
                  <i class="fas fa-paper-plane"></i>
                  Edit Review
                </button>
              </form>
            </div>


            <% } else { %>
            <div class="review-section">
              <div class="review-header">
                <h5>
                  Share Your Product Experience
                </h5>
              </div>

              <form method="POST" class="review-form" data-product-id="<%= product.product_id._id %>" data-variant-id="<%= variant._id %>" data-order-id="<%= orderId %>">
                <div class="mb-3">
                  <label>Rate this product</label>
                  <div class="star-rating">
                    <% for (let i = 5; i >= 1; i--) { %>
                    <input type="radio" id="star<%= i %>" name="rating" value="<%= i %>">
                    <label for="star<%= i %>">★</label>
                    <% } %>
                  </div>
                </div>

                <div class="mb-3">
                  <label>Write your review:</label>
                  <textarea class="review-input" name="review" placeholder="Tell us what you think about this product..."></textarea>
                </div>

                <button type="submit" class="submit-review">
                  <i class="fas fa-paper-plane"></i>
                  Submit Review
                </button>
              </form>


            </div>
          </div>
        </div>
        <% } %>


      </div>
    </div>

  </div>
</div>
</div>
</div>

<div id="preloader" style="display: none;">
  <div class="loader"></div>
</div>




</body>
<%- include('partials/footerforhome') %>

<script>
  const toastSuccess = (message) => {
    iziToast.success({
      message: message,
      backgroundColor: "#0e932d",
      messageColor: "#FFFFFF",
      icon: "fa fa-check",
      iconColor: "#FFFFFF",
      timeout: 1500,
      position: "topRight",
    });
  };

  const toastError = (message) => {
    iziToast.error({
      message: message,
      backgroundColor: "#e51e1e",
      messageColor: "#FFFFFF",
      icon: "fa fa-times",
      iconColor: "#FFFFFF",
      timeout: 1500,
      position: "topRight",
    });
  };

  const toastInfo = (message) => {
    iziToast.info({
      message: message,
      backgroundColor: "#2160de",
      messageColor: "#FFFFFF",
      icon: "fa fa-info-circle",
      iconColor: "#FFFFFF",
      timeout: 1500,
      position: "topRight",
    });
  };

  const toastWarning = (message) => {
    iziToast.warning({
      message: message,
      backgroundColor: "#e5811e",
      messageColor: "#212529",
      icon: "fa fa-exclamation-triangle",
      iconColor: "#212529",
      timeout: 1500,
      position: "topRight",
    });
  };

  const toastWish = (message) => {
    iziToast.show({
      message: message,
      backgroundColor: "#e80071",
      messageColor: "#FFFFFF",
      icon: "fas fa-check-circle",
      iconColor: "#FFFFFF",
      timeout: 2000,
      position: "bottomCenter",
    });
  };

  let preloaderTimeout;

  window.onload = function() {
    clearTimeout(preloaderTimeout);
    document.getElementById("preloader").style.display = "none";
    window.scrollTo(0, 0);
  };

  preloaderTimeout = setTimeout(function() {
    document.getElementById("preloader").style.display = "flex";
  }, 100);

  document.addEventListener('DOMContentLoaded', function() {
    const reviewForm = document.querySelector('.review-form');

    if (reviewForm) {
      reviewForm.addEventListener('submit', async function(event) {
        event.preventDefault();


        const submitButton = reviewForm.querySelector('button[type="submit"]');
        if (submitButton) {
          submitButton.disabled = true;
        }

        const productId = reviewForm.getAttribute('data-product-id');
        const variantId = reviewForm.getAttribute('data-variant-id');
        const orderId = reviewForm.getAttribute('data-order-id');

        const rating = reviewForm.querySelector('input[name="rating"]:checked')?.value;
        const reviewText = reviewForm.querySelector('textarea[name="review"]')?.value;

        if (!rating || !reviewText) {
          toastError('Please provide a rating and a review!');
          return;
        }

        const data = {
          productId,
          variantId,
          orderId,
          rating,
          review: reviewText
        };

        try {
          const response = await fetch('/submit-review', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
          });

          if (response.ok) {
            const result = await response.json();
            toastSuccess('Review submitted successfully!');
            setTimeout(() => {
              window.location.reload();
            }, 1500)
          } else {
            toastError('Failed to submit review.');
          }
        } catch (error) {
          console.error('Error:', error);
          toastWarning('Error submitting review.');
        }
      });
    } else {
      console.error('Review form not found!');
    }
  });
</script>

</html>