<!DOCTYPE html>
<html lang="en">
<%- include('partials/head') %> 
    <div class="main-content">
            
        <div class="header">
            <div class="search-bar">
                <form action="/admin/search-category" method="GET">
                    <input type="text" name="search" placeholder="Search User" disabled>
                    <button  class="admin-search-button" disabled><i class="fas fa-search"></i></button>
                </form>
            </div>
            <div class="admin-profile mx-3">
                <a href="/admin/settings">
                    <i class="fa-solid fa-circle-user"></i>
                </a>
            </div>
        </div>
        <div class="brudcrumbs"><a href="/admin/category">Category</a></div>
        <div class="filter-container">
            <div class="filter-div1">
                <div class="filter-box">
                    <i class="fa-solid fa-filter"></i>
                </div>
                
                <form action="/admin/users" method="GET">
                    <div class="filter-box">
                        <label for="filter">Filter By
                            <select name="filter" id="filter">
                                <option value="date">14 feb 2014</option>
                            </select>
                        </label>
                       </div>
                </form>
                <form action="/admin/users" method="GET">
                    <div class="filter-box">
                        <label for="status">Status
                            <select name="status" id="status" onchange="this.form.submit()">
                                <option value="all" >All</option>
                                <option value="block" >Blocked</option>
                                <option value="unblock">Active</option>
                            </select>
                        </label>
                    </div>
                </form>
            </div>
            <a href="/admin/add-category">
                <button class="add-btn">
                    Add Category
                </button>
            </a>
        </div>
        
        <table class="all-table">
            <thead>
                <tr>
                    <th>S.No</th>
                    <th>Category name</th>
                    <th>Sub categories</th>
                    <th>Created At</th>
                    <th>Offer</th>
                    <!-- <th>List / Unlist</th> -->
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <% if (category && category.length > 0) { %>
                  <% category.forEach((cat, index) => { %>
                    <tr>
                      <td> <%= (currentPage - 1) * 4 + index + 1 %> </td>
                      <td> <%= cat.name %> </td>
                      <td> 
                        <ul>
                            <% cat.subcategories.forEach((sub) => { %>
                                <li class="<%= sub.isListed ? '' : 'unlisted' %>">
                                    <form id="subcategoryForm-<%= sub._id %>">
                                      <input 
                                        type="checkbox" 
                                        name="isListed" 
                                        value="true" 
                                        <%= sub.isListed ? 'checked' : '' %> 
                                        onchange="toggleSubcategory('<%= sub._id %>', this.checked)">
                                      <%= sub.name %>
                                    </form>
                                  </li>
                            <% }) %>
                        </ul>
                    </td>
                      <td> <%= new Date(cat.created_at).toLocaleDateString() %> </td>
                      <td>
                        <% if (cat.offerId) { %>
                          <p>Offer: <%= cat.offerId.name %> (<%= cat.offerId.offerValue %>%)</p>
                           <button class="delete-btn" onclick="removeOffer('<%= cat._id %>', '<%= cat.offerId._id %>')">Remove Offer</button>
                        <% } else { %> 
                          <a href="/admin/add-offer/<%= cat._id %>">
                              <button class="add-offer-btn">Add Offer</button>
                          </a>
                        <% } %>
                      </td>
                      
                      <!-- <td>
                        <% if (!cat.isListed) { %>
                            <button class="list-btn" data-id="<%= cat._id %>" onclick="toggleCategory('<%= cat._id %>', true)">List</button>
                          <% } else { %>
                            <button class="unlist-btn" data-id="<%= cat._id %>" onclick="toggleCategory('<%= cat._id %>', false)">Unlist</button>
                          <% } %>
                    </td> -->
                    
                      <td> 
                        <a href="/admin/category/edit/<%= cat._id %>"><button class="edit-btn">Edit</button></a> |
                        <!-- <a href="/admin/category/delete/<%= cat._id %>" onclick="return confirm('Are you sure?')"><button class="delete-btn">Delete</button></a> -->
                        <% if (!cat.isListed) { %>
                            <button class="list-btn" data-id="<%= cat._id %>" onclick="toggleCategory('<%= cat._id %>', true)">List</button>
                          <% } else { %>
                            <button class="unlist-btn" data-id="<%= cat._id %>" onclick="toggleCategory('<%= cat._id %>', false)">Unlist</button>
                          <% } %>
                      </td>
                    </tr>
                  <% }) %>
                <% } else { %>
                  <tr>
                    <td colspan="6">No categories found.</td>
                  </tr>
                <% } %>
              </tbody>
              
        </table>
        <div class="pagination">
            <!-- Example for the previous page -->
            <% if (currentPage > 1) { %>
                <a href="/admin/category?page=<%= currentPage - 1 %><%= queryParams ? '&' + queryParams : '' %>">Previous</a>
            <% } %>
        
            <!-- Example for individual page numbers -->
            <% for (let i = 1; i <= totalPages; i++) { %>
                <a href="/admin/category?page=<%= i %><%= queryParams ? '&' + queryParams : '' %>" 
                   class="<%= currentPage === i ? 'active' : '' %>">
                    <%= i %>
                </a>
            <% } %>
        
            <!-- Example for the next page -->
            <% if (currentPage < totalPages) { %>
                <a href="/admin/category?page=<%= currentPage + 1 %><%= queryParams ? '&' + queryParams : '' %>">Next</a>
            <% } %>
        </div>
        
        
        
    </div>  
</body>
<%- include('partials/footer') %> 
<script>
    const toastSuccess = (message) => {
      iziToast.success({
        message: message,
        backgroundColor: '#0e932d',
        messageColor: '#FFFFFF',
        icon: 'fa fa-check',
        iconColor: '#FFFFFF',
        timeout: 1500,
        position: 'topRight',
      });
    };

    const toastError = (message) => {
      iziToast.error({
        message: message,
        backgroundColor: '#e51e1e',
        messageColor: '#FFFFFF',
        icon: 'fa fa-times',
        iconColor: '#FFFFFF',
        timeout: 1500,
        position: 'topRight',
      });
    };

    const toastInfo = (message) => {
      iziToast.info({
        message: message,
        backgroundColor: '#2160de',
        messageColor: '#FFFFFF',
        icon: 'fa fa-info-circle',
        iconColor: '#FFFFFF',
        timeout: 1500,
        position: 'topRight',
      });
    };

    const toastWarning = (message) => {
      iziToast.warning({
        message: message,
        backgroundColor: '#e5811e',
        messageColor: '#212529',
        icon: 'fa fa-exclamation-triangle',
        iconColor: '#212529',
        timeout: 1500,
        position: 'topRight',
      });
    };
    const toggleCategory = async (id, isList) => {
  try {
    const response = await fetch(`/admin/toggle-category/${id}`, {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ isListed: isList }),
    });

    if (response.ok) {
      const result = await response.json();
      toastSuccess(result.message || 'Category updated successfully');

      // Dynamically update the button
      const button = document.querySelector(`[data-id="${id}"]`);
      if (button) {
        if (isList) {
          button.textContent = 'Unlist';
          button.classList.remove('list-btn');
          button.classList.add('unlist-btn');
          button.setAttribute('onclick', `toggleCategory('${id}', false)`);
        } else {
          button.textContent = 'List';
          button.classList.remove('unlist-btn');
          button.classList.add('list-btn');
          button.setAttribute('onclick', `toggleCategory('${id}', true)`);
        }
      }
    } else {
      toastError('Failed to update category');
    }
  } catch (error) {
    console.error(error);
    toastError('Error updating category');
  }
};

const toggleSubcategory = async (id, isList) => {
  try {
    const response = await fetch(`/admin/toggle-subcategory/${id}`, {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ isListed: isList }),
    });

    if (response.ok) {
      const result = await response.json();
      toastSuccess(result.message || 'Subcategory updated successfully');
      // Optional: Update the UI dynamically here if needed
    } else {
      toastError('Failed to update subcategory');
    }
  } catch (error) {
    console.error(error);
    toastError('Error updating subcategory');
  }
};

async function removeOffer(categoryId, offerId) {
    // Make sure offerId is passed dynamically
    if (!offerId) {
        alert('Offer ID is required.');
        return;
    }

    const response = await fetch(`/admin/remove-offer/${categoryId}`, {
        method: 'POST',  // Ensure method is POST
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            offerId: offerId,  // Sending the offerId in the body
        }),
    });

    const result = await response.json();

    if (result.success) {
        // Optionally, update the UI or alert the user
        alert('Offer removed successfully!');
        location.reload();  // Reload to reflect changes
    } else {
        alert(`Failed to remove offer: ${result.message}`);
    }
}
</script>
</html>
