<!DOCTYPE html>
<html lang="en">
<%- include('partials/head') %> 
<style>
        .error {
            border: 2px solid red;
        }
        .error-message {
            color: red;
            display: none;
        }
    </style>
<div class="main-content">
    <div class="header">
        <div class="search-bar">
            <form action="/admin/search-user" method="GET">
                <input type="text" name="search" placeholder="Search " readonly>
                <button  class="admin-search-button"><i class="fas fa-search"></i></button>
            </form>
        </div>
        <div class="admin-profile mx-3">
            <a href="/admin/settings">
                <i class="fa-solid fa-circle-user"></i>
            </a>
        </div>
    </div>

    <div class="breadcrumbs"><a href="/admin/coupons">Coupons</a> > <a href="/admin/edit-coupon">Edit Coupon</a></div>

    <div>
        <div class="add-coupon-box mb-1">
            <h5 class="m-0">Add Coupon</h5>
            <form id="couponForm">
                <div class="add-products-container-center coupoun-div">
                    <div>
                        <label for="code">Code</label>
                        <input type="text" id="code" name="code" placeholder="Type the code">
                        <span class="error-message" id="codeError">This field is required.</span>
                    </div>
                    <div>
                        <label for="discountType">Discount Type</label>
                        <select name="discountType" id="discountType">
                            <option value="">Select Discount Type</option>
                            <option value="flat">Flat</option>
                            <option value="percentage">Percentage</option>
                        </select>
                        <span class="error-message" id="discountTypeError">This field is required.</span>
                    </div>
                    <div>
                        <label for="value">Value</label>
                        <input type="number" id="value" name="value" placeholder="Discount value" min="0">
                        <span class="error-message" id="valueError">Please enter a valid value.</span>
                    </div>
                    <div>
                        <label for="limit">Limit</label>
                        <input type="number" id="limit" name="limit" placeholder="No of coupon" min="1" value="1">
                        <span class="error-message" id="limitError">Please enter a valid limit.</span>
                    </div>
                </div>
                <div class="add-products-container-center coupoun-div">
                    <div>
                        <label for="minPrice">Min price</label>
                        <input type="number" id="minPrice" name="minPrice" placeholder="&#8377;200" min="0">
                        <span class="error-message" id="minPriceError">Please enter a valid minimum price.</span>
                    </div>
                    <div>
                        <label for="maxPrice">Max price</label>
                        <input type="number" id="maxPrice" name="maxPrice" placeholder="&#8377;1000" min="0">
                        <span class="error-message" id="maxPriceError">Please enter a valid maximum price.</span>
                    </div>
                    <div>
                        <label for="startDate">Start Date</label>
                        <input type="date" id="startDate" name="startDate">  
                        <span class="error-message" id="startDateError">This field is required.</span>
                    </div>
                    <div>
                        <label for="expiryDate">Expiry Date</label>
                        <input type="date" id="expiryDate" name="expiryDate">  
                        <span class="error-message" id="expiryDateError">This field is required.</span>
                    </div>
                </div>
                <div class="d-flex justify-content-center align-items-center">
                    <button type="submit" class="large-button-pink my-1">Add Coupon <i class="fas fa-plus-circle"></i></button>
                </div>
            </form> 
        </div>



</div>

<%- include('partials/footer') %> 
<script>
     const toastSuccess = (message) => {
      iziToast.success({
        message: message,
        backgroundColor: '#0e932d',
        messageColor: '#FFFFFF',
        icon: 'fa fa-check',
        iconColor: '#FFFFFF',
        timeout: 1500,
        position: 'topRight',

      });
    };

    const toastError = (message) => {
      iziToast.error({
        message: message,
        backgroundColor: '#e51e1e',
        messageColor: '#FFFFFF',
        icon: 'fa fa-times',
        iconColor: '#FFFFFF',
        timeout: 1500,
        position: 'topRight',
      });
    };
    const toastInfo = (message) => {
      iziToast.info({
        message: message,
        backgroundColor: '#2160de',
        messageColor: '#FFFFFF',
        icon: 'fa fa-info-circle',
        iconColor: '#FFFFFF',
        timeout: 1500,
        position: 'topRight',
      });
    };

    const toastWarning = (message) => {
      iziToast.warning({
        message: message,
        backgroundColor: '#e5811e',
        messageColor: '#212529',
        icon: 'fa fa-exclamation-triangle',
        iconColor: '#212529',
        timeout: 1500,
        size: 'small',
        position: 'topRight',
      });
    };
    
    document.addEventListener('DOMContentLoaded', (event) => {
            const form = document.getElementById('couponForm');
            const inputs = form.querySelectorAll('input, select');
            const errorMessages = {
                code: 'This field is required.',
                discountType: 'This field is required.',
                value: 'Please enter a valid value.',
                limit: 'Please enter a valid limit.',
                minPrice: 'Please enter a valid minimum price.',
                maxPrice: 'Please enter a valid maximum price.',
                expiryDate: 'This field is required.',
                startDate: 'This field is required.',
                dateRange: 'Start date must be before expiry date.',
                priceRange: 'Max price must be greater than min price.',
            };





            const validateField = (input) => {
                const errorElement = document.getElementById(`${input.id}Error`);
                if (!input.value || input.validity.rangeUnderflow) {
                    input.classList.add('error');
                    errorElement.textContent = errorMessages[input.id];
                    errorElement.style.display = 'block';
                    return false;
                } else {
                    input.classList.remove('error');
                    errorElement.style.display = 'none';
                    return true;
                }
            };

            const validateDateRange = () => {
                const startDate = document.getElementById('startDate');
                const expiryDate = document.getElementById('expiryDate');
                const errorElement = document.getElementById('expiryDateError');
                if (new Date(startDate.value) >= new Date(expiryDate.value)) {
                    expiryDate.classList.add('error');
                    errorElement.textContent = errorMessages.dateRange;
                    errorElement.style.display = 'block';
                    return false;
                } else {
                    expiryDate.classList.remove('error');
                    errorElement.style.display = 'none';
                    return true;
                }
            };

            const validatePriceRange = () => {
                const minPrice = document.getElementById('minPrice');
                const maxPrice = document.getElementById('maxPrice');
                const errorElement = document.getElementById('maxPriceError');
                if (parseFloat(minPrice.value) >= parseFloat(maxPrice.value)) {
                    maxPrice.classList.add('error');
                    errorElement.textContent = errorMessages.priceRange;
                    errorElement.style.display = 'block';
                    return false;
                } else {
                    maxPrice.classList.remove('error');
                    errorElement.style.display = 'none';
                    return true;
                }
            };

            inputs.forEach(input => {
                if (input.type === 'date') {
                    input.addEventListener('change', () => {
                        validateField(input);
                        if (input.id === 'startDate' || input.id === 'expiryDate') {
                            validateDateRange();
                        }
                    });
                } else if (input.type === 'number') {
                    input.addEventListener('input', () => {
                        validateField(input);
                        if (input.id === 'minPrice' || input.id === 'maxPrice') {
                            validatePriceRange();
                        }
                    });
                } else {
                    input.addEventListener('input', () => validateField(input));
                }
            });

            form.addEventListener('submit', async (event) => {
                event.preventDefault();
                let valid = true;
                inputs.forEach(input => {
                    if (!validateField(input)) {
                        valid = false;
                    }
                });
                if (!validateDateRange() || !validatePriceRange()) {
                    valid = false;
                }
                if (!valid) {
                    return;
                }

                // AJAX request
                const formData = new FormData(form);
                const data = {};
                formData.forEach((value, key) => {
                    data[key] = value;
                });

                try {
                    const response = await fetch('/admin/add-coupon', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data),
                    });

                    if (response.ok) {
                    // form.reset();
                    toastSuccess('Coupon added successfully!');
                    } else {
                        const errorText = await response.text();
                        toastError(`Error: ${errorText}`);
                    }
                } catch (error) {
                    console.error('Error:', error);
                    toastWarning("Internal server error");
                }
            });
        });
</script>
</html>
