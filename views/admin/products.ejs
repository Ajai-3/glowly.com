<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('partials/head') %>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/izitoast/dist/css/iziToast.min.css">
</head>
<body>
  
<div class="header">
  <div class="responsive-logo-admin-side">
    <div class="d-flex align-items-center">
      <i class="fa fa-bars" id="sidebar-toggle"></i>
    <h2 class="m-0 mx-2"> Glowly</h2>
    </div>
  </div>
  <div class="d-flex align-items-center">
    <div class="search-bar">
      <form action="/admin/products" method="GET">
        <input type="text" name="search" placeholder="Search Products" value="<%= search %>">
        <button class="admin-search-button"><i class="fas fa-search"></i></button>
      </form>
    </div>
    <div class="admin-profile mx-3">
      <a href="/admin/settings">
        <i class="fa-solid fa-circle-user"></i>
      </a>
    </div>
  </div>
</div>
<div id="background-overlay" class="overlay"></div>


<div class="main-content">

  <div class="brudcrumbs"><a href="/admin/products">Products</a></div>

  



    <div class="filter-container">
      <div class="filter-div1">
        <div class="filter-box">
          <i class="fa-solid fa-filter"></i>
        </div>
        <form action="/admin/products" method="GET">
          <div class="filter-box">
            <label for="status">Status
              <select name="status" id="status" onchange="this.form.submit()">
                <option value="all" <%= status === 'all' ? 'selected' : '' %>>All</option>
                <option value="deleted" <%= status === 'deleted' ? 'selected' : '' %>>Deleted</option>
                <option value="available" <%= status === 'available' ? 'selected' : '' %>>Available</option>
              </select>
            </label>
          </div>
        </form>
      </div>

      <div class="resposive-search-admin-side search-bar">
        <form action="/admin/products" method="GET">
          <input type="text" name="search" placeholder="Search Products" value="<%= search %>">
          <button class="admin-search-button"><i class="fas fa-search"></i></button>
        </form>
      </div>
      <div>
        <button type="button" class="top-items-btn add-product-btn" data-toggle="modal" data-target="#topItemsModal">
          <i class="fa-solid fa-crown"></i>&nbsp;&nbsp;Show Top Products
        </button>
        <a href="/admin/add-products">
          <button class="add-product-btn">
            <i class="fa-solid fa-plus"></i>&nbsp;&nbsp;Add New Products
          </button>
        </a>
      </div>
     
    </div>


  <div class="table-scroll-wrapper">
    <table class="all-table">
      <thead>
        <tr>
          <th>S.No</th>
          <th>Image</th>
          <th>Product Name</th>
          <th>Brand</th>
          <th>Category</th>
          <th>Sub category</th>
          <th>Price</th>
          <th>Sale Price</th>
          <th>Stock</th>
          <th>Action</th>
        </tr>
      </thead>
      <tbody>
        <% variants.forEach((variant, index) => { %>
          <tr class="<%= variant.varientIsDeleted ? 'deleted-row' : '' %>" data-product-id="<%= variant.productId %>" data-product-deleted="<%= variant.isDeleted ? 'true' : 'false' %>">
            <td><%= (currentPage - 1) * perPage + index + 1 %></td>
            <td>
              <% if (variant.images && variant.images.length > 0) { %>
                <img src="<%= variant.images[0] %>" alt="<%= variant.productTitle %> Image" width="50" height="50">
              <% } else { %>
                <img src="/path/to/placeholder/image.jpg" alt="Placeholder Image" width="50" height="50">
              <% } %>
            </td>
            <td class="truncate">
              <%= variant.productTitle %> - <%= variant.shade %>
            </td>
            <td><%= variant.brandName %></td>
            <td><%= variant.categoryName %></td>
            <td><%= variant.subcategoryName %></td>
            <td><%= variant.regularPrice %></td>
            <td><%= variant.salePrice %></td>
            <td><%= variant.stockQuantity %></td>
            <td>
              <a href="/admin/add-variants/<%= variant.productId %>"><button class="edit-btn">Edit</button></a>
              <% if (!variant.isDeleted) { %>
                <button class="delete-btn" data-id="<%= variant.productId %>" data-deleted="false">Delete</button>
              <% } else { %>
                <button class="restore-btn" data-id="<%= variant.productId %>" data-deleted="true">Restore</button>
              <% } %>
            </td>
          </tr>
        <% }) %>
      </tbody>
    </table>
  </div>
 

  <div class="pagination">
    <% 
      const pageLimit = 5;  
      let startPage = Math.max(1, currentPage - Math.floor(pageLimit / 2));
      let endPage = Math.min(totalPages, startPage + pageLimit - 1);
  
      if (endPage - startPage < pageLimit - 1) {
        startPage = Math.max(1, endPage - pageLimit + 1);
      }
    %>
  
    <% if (currentPage > 1) { %>
      <a href="/admin/products?page=<%= currentPage - 1 %>&search=<%= search %>&status=<%= status %>">Previous</a>
    <% } %>
  
    <% for (let i = startPage; i <= endPage; i++) { %>
      <a href="/admin/products?page=<%= i %>&search=<%= search %>&status=<%= status %>" class="<%= currentPage === i ? 'active' : '' %>"><%= i %></a>
    <% } %>
  
    <% if (currentPage < totalPages) { %>
      <a href="/admin/products?page=<%= currentPage + 1 %>&search=<%= search %>&status=<%= status %>">Next</a>
    <% } %>
  </div>
  




<div class="modal fade top-items-modal" id="topItemsModal" tabindex="-1" role="dialog" aria-labelledby="topItemsModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="topItemsModalLabel">Top 10 Items</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <ul id="top-items-list" class="list-group">
        </ul>
      </div>
    </div>
  </div>
</div>



<%- include('partials/footer') %>
<script src="https://cdn.jsdelivr.net/npm/izitoast/dist/js/iziToast.min.js"></script>
<script>
  const toastSuccess = (message) => {
    iziToast.success({
      message: message,
      backgroundColor: '#0e932d',
      messageColor: '#FFFFFF',
      icon: 'fa fa-check',
      iconColor: '#FFFFFF',
      timeout: 1500,
      position: 'topRight',
    });
  };

  const toastError = (message) => {
    iziToast.error({
      message: message,
      backgroundColor: '#e51e1e',
      messageColor: '#FFFFFF',
      icon: 'fa fa-times',
      iconColor: '#FFFFFF',
      timeout: 1500,
      position: 'topRight',
    });
  };

  const toastInfo = (message) => {
    iziToast.info({
      message: message,
      backgroundColor: '#2160de',
      messageColor: '#FFFFFF',
      icon: 'fa fa-info-circle',
      iconColor: '#FFFFFF',
      timeout: 1500,
      position: 'topRight',
    });
  };

  const toastWarning = (message) => {
    iziToast.warning({
      message: message,
      backgroundColor: '#e5811e',
      messageColor: '#212529',
      icon: 'fa fa-exclamation-triangle',
      iconColor: '#212529',
      timeout: 1500,
      position: 'topRight',
    });
  };


  document.addEventListener('DOMContentLoaded', function () {
  const btn = document.querySelector(".top-items-btn");
  const itemList = document.getElementById("top-items-list");

  btn.onclick = async function () {
    try {
      const response = await fetch('/admin/top-products');
      const topItems = await response.json();

      itemList.innerHTML = '';

      topItems.forEach((item, index) => {
        const li = document.createElement('li');
        li.classList.add('top-items-item');

        const itemNumber = document.createElement('span');
        itemNumber.classList.add('top-items-number');
        itemNumber.textContent = index + 1;

        const itemName = document.createElement('span');
        itemName.classList.add('top-items-name');
        itemName.textContent = item.name;

        const soldCount = document.createElement('span');
        soldCount.classList.add('top-items-sold-count');
        soldCount.textContent = `Total Sold: ${item.totalSold}`;

        li.appendChild(itemNumber);
        li.appendChild(itemName);
        li.appendChild(soldCount);

        itemList.appendChild(li);
      });
    } catch (error) {
      console.error('Error fetching top items:', error);
    }
  };
});






document.addEventListener('DOMContentLoaded', function () {
    const buttons = document.querySelectorAll('.delete-btn, .restore-btn');

    buttons.forEach(button => {
        button.addEventListener('click', async () => {
            const productId = button.getAttribute('data-id');
            const isDeleted = button.getAttribute('data-deleted') === 'true';
            const productRow = document.querySelector(`[data-product-id="${productId}"]`);

            try {
                const response = await fetch(`/admin/toggle-product/${productId}`, {
                    method: 'PATCH',
                    headers: { 'Content-Type': 'application/json' },
                });

                if (response.ok) {
                    const result = await response.json();
                    if (result.success) {
                        const allButtons = document.querySelectorAll(`[data-id="${productId}"]`);
                        allButtons.forEach(btn => {
                            btn.textContent = result.isDeleted ? 'Restore' : 'Delete';
                            btn.className = result.isDeleted ? 'restore-btn' : 'delete-btn';
                            btn.setAttribute('data-deleted', result.isDeleted.toString());
                        });

                        toastSuccess(result.message);

                        const productRows = document.querySelectorAll(`[data-product-id="${productId}"]`);
                        productRows.forEach(row => {
                            const variantIsDeleted = row.getAttribute('data-variant-deleted') === 'true';
                            
                            if (variantIsDeleted) {
                                row.classList.add('deleted-row');
                            } else if (result.isDeleted) {
                                row.classList.add('deleted-row');
                            } else {
                                row.classList.remove('deleted-row');
                            }
                        });
                    } else {
                        toastError('Failed to update product status');
                    }
                } else {
                    toastError('Error toggling product status');
                }
            } catch (error) {
                console.error('Error:', error);
                toastWarning('An error occurred');
            }
        });
    });

});

</script>
</html>